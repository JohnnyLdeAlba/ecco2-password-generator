let SINEWAVE_TABLE_ID = -999;
let SINEWAVE_TABLE = [

    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x3f, 0x3f,
    0x3f, 0x3e, 0x3e, 0x3e, 0x3d, 0x3d, 0x3c, 0x3c,
    0x3b, 0x3b, 0x3a, 0x39, 0x38, 0x38, 0x37, 0x36,
    0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x2f, 0x2e,
    0x2d, 0x2c, 0x2b, 0x2a, 0x29, 0x27, 0x26, 0x25,
    0x24, 0x22, 0x21, 0x20, 0x1e, 0x1d, 0x1b, 0x1a,
    0x18, 0x17, 0x16, 0x14, 0x13, 0x11, 0x10, 0x0e,
    0x0c, 0x0b, 0x09, 0x08, 0x06, 0x05, 0x03, 0x02,
    0x00, 0xfe, 0xfd, 0xfb, 0xfa, 0xf8, 0xf7, 0xf5,
    0xf4, 0xf2, 0xf0, 0xef, 0xed, 0xec, 0xea, 0xe9,
    0xe8, 0xe6, 0xe5, 0xe3, 0xe2, 0xe0, 0xdf, 0xde,
    0xdc, 0xdb, 0xda, 0xd9, 0xd7, 0xd6, 0xd5, 0xd4,
    0xd3, 0xd2, 0xd1, 0xd0, 0xcf, 0xce, 0xcd, 0xcc,
    0xcb, 0xca, 0xc9, 0xc8, 0xc8, 0xc7, 0xc6, 0xc5,
    0xc5, 0xc4, 0xc4, 0xc3, 0xc3, 0xc2, 0xc2, 0xc2,
    0xc1, 0xc1, 0xc1, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,
    0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc1, 0xc1,
    0xc1, 0xc2, 0xc2, 0xc2, 0xc3, 0xc3, 0xc4, 0xc4,
    0xc5, 0xc5, 0xc6, 0xc7, 0xc8, 0xc8, 0xc9, 0xca,
    0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2,
    0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd9, 0xda, 0xdb,
    0xdc, 0xde, 0xdf, 0xe0, 0xe2, 0xe3, 0xe5, 0xe6,
    0xe8, 0xe9, 0xea, 0xec, 0xed, 0xef, 0xf0, 0xf2,
    0xf4, 0xf5, 0xf7, 0xf8, 0xfa, 0xfb, 0xfd, 0xfe,
    0x00, 0x02, 0x03, 0x05, 0x06, 0x08, 0x09, 0x0b,
    0x0c, 0x0e, 0x10, 0x11, 0x13, 0x14, 0x16, 0x17,
    0x18, 0x1a, 0x1b, 0x1d, 0x1e, 0x20, 0x21, 0x22,
    0x24, 0x25, 0x26, 0x27, 0x29, 0x2a, 0x2b, 0x2c,
    0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34,
    0x35, 0x36, 0x37, 0x38, 0x38, 0x39, 0x3a, 0x3b,
    0x3b, 0x3c, 0x3c, 0x3d, 0x3d, 0x3e, 0x3e, 0x3e,
    0x3f, 0x3f, 0x3f, 0x40, 0x40, 0x40, 0x40, 0x40,
    0x40 ];

let RIPPLE_TABLE_ID = -998;
let RIPPLE_TABLE = [

    0xe5, 0x72, 0xb9, 0xdc, 0xee, 0x77, 0x3b, 0x1d,
    0x0e, 0x87, 0xc3, 0xe1, 0x70, 0xb8, 0xdc, 0xee,
    0xf7, 0x7b, 0x3d, 0x9e, 0x4f, 0xa7, 0x53, 0x29,
    0x94, 0xca, 0xe5, 0x72, 0x39, 0x9c, 0xce, 0xe7,
    0xf3, 0xf9, 0xfc, 0xfe, 0xff, 0xff, 0x7f, 0x3f,
    0x9f, 0x4f, 0xa7, 0xd3, 0xe9, 0x74, 0x3a, 0x1d,
    0x0e, 0x87, 0xc3, 0xe1, 0xf0, 0xf8, 0x7c, 0x3e,
    0x9f, 0x4f, 0x27, 0x93, 0x49, 0xa4, 0x52, 0xa9,
    0xd4, 0xea, 0xf5, 0xfa, 0xfd, 0x7e, 0x3f, 0x1f,
    0x8f, 0xc7, 0x63, 0xb1, 0x58, 0x2c, 0x96, 0x4b,
    0xa5, 0xd2, 0x69, 0x34, 0x1a, 0x8d, 0xc6, 0xe3,
    0x71, 0xb8, 0x5c, 0xae, 0x57, 0xab, 0xd5, 0xea,
    0x75, 0x3a, 0x1d, 0x0e, 0x87, 0x43, 0xa1, 0x50,
    0x28, 0x94, 0x4a, 0xa5, 0x52, 0x29, 0x94, 0x4a,
    0x25, 0x12, 0x89, 0xc4, 0xe2, 0x71, 0xb8, 0xdc,
    0xee, 0xf7, 0x7b, 0x3d, 0x9e, 0xcf, 0x67, 0x33,
    0x19, 0x8c, 0xc6, 0xe3, 0x71, 0x38, 0x9c, 0xce,
    0x67, 0x33, 0x19, 0x8c, 0x46, 0x23, 0x11, 0x08,
    0x04, 0x82, 0x41, 0x20, 0x10, 0x88, 0x44, 0xa2,
    0xd1, 0xe8, 0x74, 0xba, 0xdd, 0x6e, 0xb7, 0xdb,
    0xed, 0xf6, 0x7b, 0x3d, 0x1e, 0x8f, 0xc7, 0xe3,
    0x71, 0x38, 0x1c, 0x8e, 0x47, 0x23, 0x91, 0x48,
    0x24, 0x12, 0x09, 0x04, 0x02, 0x01, 0x00, 0x80,
    0xc0, 0x60, 0x30, 0x18, 0x8c, 0x46, 0xa3, 0x51,
    0x28, 0x14, 0x8a, 0xc5, 0xe2, 0x71, 0xb8, 0x5c,
    0xae, 0x57, 0xab, 0xd5, 0x6a, 0xb5, 0x5a, 0x2d,
    0x16, 0x8b, 0x45, 0xa2, 0x51, 0x28, 0x94, 0xca,
    0x65, 0xb2, 0x59, 0x2c, 0x96, 0xcb, 0x65, 0xb2,
    0xd9, 0xec, 0xf6, 0x7b, 0xbd, 0xde, 0x6f, 0xb7,
    0xdb, 0x6d, 0xb6, 0x5b, 0xad, 0x56, 0x2b, 0x15,
    0x8a, 0x45, 0x22, 0x11, 0x08, 0x04, 0x82, 0xc1,
    0x60, 0xb0, 0x58, 0xac, 0xd6, 0xeb, 0xf5, 0x7a ];

function get_wave_table(id)
{
    if (id == SINEWAVE_TABLE_ID)
        return SINEWAVE_TABLE;
    else if (id == RIPPLE_TABLE_ID)
        return RIPPLE_TABLE;

    let index;
    let table = new Array();

    for (index = 0; index < 256; index++)
	table[index] = id * index;

    return table;
}

function create_wave_generator(
    primary_id,
    secondary_id)
{
    let wg = new Object();

    wg.primary_table = get_wave_table(primary_id);
    wg.secondary_table = get_wave_table(secondary_id);

    return wg;
}

function process_wave_generator(wg, frame_index)
{
    let line_index= 0;
    let line_offset = 0;

    let primary_index = 0;
    let secondary_index = 0;

    let offset_table = new Array();

    if (wg == null) 
        wg = create_wave_generator(
            SINEWAVE_TABLE_ID,
            RIPPLE_TABLE_ID);

    while (line_index < 255)
    {
        secondary_index = frame_index + line_index;
        secondary_index = secondary_index & 0xff;

        primary_index = wg.secondary_table[secondary_index];
        primary_index = primary_index & 0xff;   
 
        line_offset = wg.primary_table[primary_index];

        if (line_offset & 0x80) line_offset = line_offset | 0xffffff00; 

        line_offset = line_offset - 0x40;
        line_offset = line_offset >> 1;

        offset_table[line_index] = line_offset;

        line_index++;
    }

    return offset_table;
}
